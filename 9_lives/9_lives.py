import random

lives = 9
words = [
    "–ø–∏—Ü—Ü–∞",
    "–±–∞—Ä–∞–Ω",
    "–∫–∞–º–∞–∑",
    "—Ä—É—á–∫–∞",
    "–ª–æ—Ç–æ—Å",
    "—Å–ª–æ–≤–æ",
    "–∞–Ω–≥–µ–ª",
    "–ø–æ–µ–∑–¥",
    "–∫–∞–∫–∞–æ",
    "–æ–ª–µ–Ω—å",
    "–º–∏—Ä–∞–∂",
    "—à—Ç–æ—Ä—ã",
    "–æ–∫—É–Ω—å",
    "–º–∞–ª—ã—à",
    "–Ω–æ—Å–∫–∏",
    "–±–µ–ª–æ–∫",
    "—Ç–æ–ø–∞–∑",
    "–∑–æ–º–±–∏",
    "–±—Ä–æ–≤—å",
    "–≤—ã–¥—Ä–∞",
    "–ø–µ—Å–æ–∫",
    "—Å–æ–ª–æ–¥",
    "–ø–µ—Ç—É—Ö",
    "–∫–Ω–∏–≥–∞",
    "–≤–∏–ª–∫–∞",
    "–∫–æ—à–∫–∞",
    "—Å–ª—é–Ω–∞",
    "—Ä–µ–ø–∫–∞",
    "–≤–∞–Ω–Ω–∞",
    "—Å—Å–æ—Ä–∞",
]
words_descriptions = {
    "—Ä—É—á–∫–∞": "—à–∫–æ–ª—å–Ω–∞—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å",
    "–±–∞—Ä–∞–Ω": "–¥–æ–º–∞—à–Ω–µ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ",
    "–∫–∞–º–∞–∑": "–º–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π",
    "–ª–æ—Ç–æ—Å": "—Ü–≤–µ—Ç–æ–∫",
    "—Å–ª–æ–≤–æ": "—á–∞—Å—Ç—å —Ä–µ—á–∏",
    "–ø–æ–µ–∑–¥": "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
    "–∫–∞–∫–∞–æ": "—Ä–∞—Å—Ç–µ–Ω–∏–µ —Å –≤–∫—É—Å–Ω—ã–º–∏ –ø–ª–æ–¥–∞–º–∏",
    "–æ–ª–µ–Ω—å": "–ª–µ—Å–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ",
    "—à—Ç–æ—Ä—ã": "–ø—Ä–µ–¥–º–µ—Ç –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞",
    "–æ–∫—É–Ω—å": "—Ä—ã–±–∞",
    "–º–∞–ª—ã—à": "–≤—Å—ë –ø–æ—Ä—Ç–∏—Ç",
    "–±–µ–ª–æ–∫": "–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–µ –≤–µ—â–µ—Å—Ç–≤–æ",
    "—Ç–æ–ø–∞–∑": "–¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–π –∫–∞–º–µ–Ω—å",
    "–∑–æ–º–±–∏": "–∂—É—Ç–∫–æ–µ —Å—É—â–µ—Å—Ç–≤–æ",
    "–±—Ä–æ–≤—å": "—á–∞—Å—Ç—å –ª–∏—Ü–∞",
    "–ø–µ—Å–æ–∫": "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª",
    "—Å–æ–ª–æ–¥": "–∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ö–ª–µ–±–∞",
    "–∫–Ω–∏–≥–∞": "–∏—Å—Ç–æ—á–Ω–∏–∫ –∑–Ω–∞–Ω–∏–π",
    "–≤–∏–ª–∫–∞": "–≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å –Ω–∞ –∫—É—Ö–Ω–µ",
    "—Å–ª—é–Ω–∞": "—Ñ–∏–∑–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∂–∏–¥–∫–æ—Å—Ç—å",
    "—Ä–µ–ø–∫–∞": "–æ–≤–æ—â",
    "–≤–∞–Ω–Ω–∞": "—Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞",
    "—Å—Å–æ—Ä–∞": "–∫–æ–≥–¥–∞ –≤—Å–µ –æ–±–∏–∂–∞—é—Ç—Å—è",
    "–∫–æ—à–∫–∞": "–∏–º–µ–µ—Ç —É—Å—ã",
    "–ø–∏—Ü—Ü–∞": "–ò—Ç–∞–ª—å—è–Ω—Å–∫–æ–µ –±–ª—é–¥–æ",
    "–∞–Ω–≥–µ–ª": "–ù–µ–±–µ—Å–Ω–æ–µ —Å—É—â–µ—Å—Ç–≤–æ",
    "–º–∏—Ä–∞–∂": "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –≤–∏–¥–µ–Ω–∏–µ",
    "–Ω–æ—Å–∫–∏": "–û–¥–µ–∂–¥–∞",
    "–≤—ã–¥—Ä–∞": "–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –∑–≤–µ—Ä—ë–∫",
    "–ø–µ—Ç—É—Ö": "–ü—Ç–∏—Ü–∞ —Å —Ü–≤–µ—Ç–Ω—ã–º —Ö–≤–æ—Å—Ç–æ–º",
}
secret_word = random.choice(words)
clue = list("?????")
heart_symbol = "\U0001f49b"
guessed_word_not_correctly = True


# —Å–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –≤ –ø–æ–¥—Å–∫–∞–∑–∫—É clue —É–≥–∞–¥–∞–Ω–Ω—É—é –±—É–∫–≤—É
def update_clue(guesssed_symbol, secret_word, clue):
    global lives, guessed_word_not_correctly
    if guesssed_symbol == "":
        print("–ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–µ—Å—Ç–∏ –º–∏–Ω—É–º—É–º –æ–¥–Ω—É –±—É–∫–≤—É.")
    elif guesssed_symbol != "":
        if guesssed_symbol in secret_word:
            print("–ú–æ–ª–æ–¥–µ—Ü, –µ—Å—Ç—å —Ç–∞–∫–∞—è –±—É–∫–≤–∞!üî•")

        for i, symb in enumerate(secret_word):
            if guesssed_symbol == symb:
                clue[i] = symb
                if "?" not in clue:
                    guessed_word_not_correctly = False
                    print("–ü–æ–±–µ–¥–∞!üí• –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ!üéâ")

    if guesssed_symbol not in secret_word:
        lives -= 1
        print("–¢–∞–∫–æ–π –±—É–∫–≤—ã –Ω–µ—Ç.")
        print(f"–û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π: {lives}", lives * heart_symbol)

    print(clue)


print(
    f"–Ø –∑–∞–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ –∏–∑ –ø—è—Ç–∏ –±—É–∫–≤. –≠—Ç–æ...\n‚úÖ{words_descriptions[secret_word]}‚úÖ\n{clue}",
    "\n–£–≥–∞–¥–∞–π –±—É–∫–≤—É –∏–ª–∏ —Å–ª–æ–≤–æ —Ü–µ–ª–∏–∫–æ–º.",
)
print("–û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π:", str(9), 9 * heart_symbol)

while guessed_word_not_correctly:
    if lives > 0:
        guess = input("–í–≤–µ–¥–∏ –±—É–∫–≤—É –∏–ª–∏ —Å–ª–æ–≤–æ:\n").lower()
        if len(guess) > 1:
            if guess != secret_word:
                lives -= 1
                print(
                    "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.\n–û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π:", str(lives), lives * heart_symbol
                )
            else:
                guessed_word_not_correctly = False
                print("–ü–æ–±–µ–¥–∞!üí• –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ!üéâ")
        else:
            update_clue(guess, secret_word, clue)
    else:
        print("–ñ–∏–∑–Ω–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å... üò≠\nGame over")
        break
